{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["sleep","ms","Promise","resolve","setTimeout","initTimes","App","useState","innerHeight","setInnerHeight","VH","setVH","initWindowSize","a","vh","window","vw","innerWidth","document","documentElement","style","setProperty","getPropertyValue","useEffect","addEventListener","removeEventListener","position","top","left","transform","zIndex","fontWeight","fontSize","color","display","flexDirection","backgroundColor","height","width","onClick","className","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"+NAIMA,G,MAAQ,SAACC,GAAD,OAAgB,IAAIC,SAAQ,SAACC,GAAD,OAAaC,WAAWD,EAASF,QAEvEI,EAAY,EAmFDC,MAjFf,WAAgB,IAAD,EACwBC,mBAAiB,GADzC,mBACPC,EADO,KACMC,EADN,OAEMF,mBAAiB,IAFvB,mBAEPG,EAFO,KAEHC,EAFG,cAICC,IAJD,2EAId,8BAAAC,EAAA,6DACKC,EAA0B,IAArBC,OAAOP,YACZQ,EAAyB,IAApBD,OAAOE,WAChBC,SAASC,gBAAgBC,MAAMC,YAAY,OAA3C,UAAsDP,EAAtD,OACAI,SAASC,gBAAgBC,MAAMC,YAAY,OAA3C,UAAsDL,EAAtD,OACAP,EAAeM,OAAOP,aACtBG,EAAMO,SAASC,gBAAgBC,MAAME,iBAAiB,SANvD,SAOOtB,EAAM,KAPb,OASKK,GAAa,GAChBA,IACAO,KAEAP,EAAY,EAbd,4CAJc,sBA+Bd,OAVAkB,qBAAU,WAIT,OAHAX,IACAG,OAAOS,iBAAiB,oBAAqBZ,GAEtC,WACNG,OAAOU,oBAAoB,oBAAqBb,MAG/C,IAGF,mCAOC,sBACCQ,MAAO,CACNM,SAAU,QACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,OAAQ,MACRC,WAAY,IACZC,SAAU,OACVC,MAAO,SACPC,QAAS,OACTC,cAAe,SACfC,gBAAiB,MACjBC,OAAQ,yBACRC,MAAO,QAdT,UAiBC,8CAAiB9B,KACjB,qCAAQE,KACR,wBACC6B,QAAS,WACR9B,EAAeM,OAAOP,aACtBG,EAAMO,SAASC,gBAAgBC,MAAME,iBAAiB,UAHxD,kCAQA,mBACCkB,UAAU,WACVC,KAAK,+CACLC,OAAO,SACPC,IAAI,sBAJL,yCC5DWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrC,SAASsC,eAAe,SAM1BZ,M","file":"static/js/main.259ceb17.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { createPortal } from \"react-dom\";\n\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nlet initTimes = 0;\n\nfunction App() {\n\tconst [innerHeight, setInnerHeight] = useState<number>(0);\n\tconst [VH, setVH] = useState<string>(\"\");\n\n\tasync function initWindowSize() {\n\t\tlet vh = window.innerHeight * 0.01;\n\t\tlet vw = window.innerWidth * 0.01;\n\t\tdocument.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n\t\tdocument.documentElement.style.setProperty(\"--vw\", `${vw}px`);\n\t\tsetInnerHeight(window.innerHeight);\n\t\tsetVH(document.documentElement.style.getPropertyValue(\"--vh\"));\n\t\tawait sleep(1000);\n\n\t\tif (initTimes <= 5) {\n\t\t\tinitTimes++;\n\t\t\tinitWindowSize();\n\t\t} else {\n\t\t\tinitTimes = 0;\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tinitWindowSize();\n\t\twindow.addEventListener(\"orientationchange\", initWindowSize);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"orientationchange\", initWindowSize);\n\t\t};\n\t\t// eslint-disable-next-line\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t{/* <div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t\t<p>\n\t\t\t\t\t\tEdit <code>src/App.tsx</code> and save to reload.\n\t\t\t\t\t</p> */}\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: \"fixed\",\n\t\t\t\t\ttop: \"50%\",\n\t\t\t\t\tleft: \"50%\",\n\t\t\t\t\ttransform: \"translate(-50%, -50%)\",\n\t\t\t\t\tzIndex: 99999,\n\t\t\t\t\tfontWeight: 700,\n\t\t\t\t\tfontSize: \"2rem\",\n\t\t\t\t\tcolor: \"orange\",\n\t\t\t\t\tdisplay: \"flex\",\n\t\t\t\t\tflexDirection: \"column\",\n\t\t\t\t\tbackgroundColor: \"red\",\n\t\t\t\t\theight: \"calc( var(--vh) * 45 )\",\n\t\t\t\t\twidth: \"50vw\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<p>InnerHeight: {innerHeight}</p>\n\t\t\t\t<p>VH: {VH}</p>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetInnerHeight(window.innerHeight);\n\t\t\t\t\t\tsetVH(document.documentElement.style.getPropertyValue(\"--vh\"));\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tget new height value\n\t\t\t\t</button>\n\t\t\t\t<a\n\t\t\t\t\tclassName=\"App-link\"\n\t\t\t\t\thref=\"https://sp0033212000.github.io/fixedProblem/\"\n\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t>\n\t\t\t\t\tClick to open new tab\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t\t{/* </header> */}\n\t\t\t{/* </div> */}\n\t\t</>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}